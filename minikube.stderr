I0407 10:23:34.720850   33435 start.go:259] hostinfo: {"hostname":"priyawadhwa-macbookpro2.roam.corp.google.com","uptime":50205,"bootTime":1586230009,"procs":422,"os":"darwin","platform":"darwin","platformFamily":"","platformVersion":"10.14.6","kernelVersion":"18.7.0","virtualizationSystem":"","virtualizationRole":"","hostid":"bc166f11-dd33-32af-af67-de0b2c985aa8"}
W0407 10:23:34.720943   33435 start.go:267] gopshost.Virtualization returned error: not implemented yet
* minikube v1.9.0 on Darwin 10.14.6
I0407 10:23:34.740084   33435 main.go:110] libmachine: Found binary path at /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:23:34.740246   33435 main.go:110] libmachine: Launching plugin server for driver hyperkit
I0407 10:23:34.756725   33435 main.go:110] libmachine: Plugin server listening at address 127.0.0.1:57984
I0407 10:23:34.757410   33435 main.go:110] libmachine: () Calling .GetVersion
I0407 10:23:34.757974   33435 main.go:110] libmachine: Using API Version  1
I0407 10:23:34.757986   33435 main.go:110] libmachine: () Calling .SetConfigRaw
I0407 10:23:34.758243   33435 main.go:110] libmachine: () Calling .GetMachineName
I0407 10:23:34.758359   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:34.758475   33435 driver.go:226] Setting default libvirt URI to qemu:///system
I0407 10:23:34.758823   33435 main.go:110] libmachine: Found binary path at /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:23:34.758853   33435 main.go:110] libmachine: Launching plugin server for driver hyperkit
I0407 10:23:34.772958   33435 main.go:110] libmachine: Plugin server listening at address 127.0.0.1:57990
I0407 10:23:34.773419   33435 main.go:110] libmachine: () Calling .GetVersion
I0407 10:23:34.773864   33435 main.go:110] libmachine: Using API Version  1
I0407 10:23:34.773875   33435 main.go:110] libmachine: () Calling .SetConfigRaw
I0407 10:23:34.774167   33435 main.go:110] libmachine: () Calling .GetMachineName
I0407 10:23:34.774312   33435 main.go:110] libmachine: (minikube) Calling .DriverName
* Using the hyperkit driver based on existing profile
I0407 10:23:34.800652   33435 start.go:307] selected driver: hyperkit
I0407 10:23:34.800672   33435 start.go:596] validating driver "hyperkit" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:file:///Users/priyawadhwa/minikube/out/minikube.iso Memory:6000 CPUs:2 DiskSize:20000 Driver:hyperkit HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.99.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio KubernetesConfig:{KubernetesVersion:v1.18.0 ClusterName:minikube APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false NodeIP: NodePort:0 NodeName:} Nodes:[{Name:m01 IP:192.168.64.181 Port:8443 KubernetesVersion:v1.18.0 ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true]}
I0407 10:23:34.800764   33435 start.go:602] status for hyperkit: {Installed:true Healthy:true Error:<nil> Fix: Doc:}
I0407 10:23:34.800833   33435 install.go:49] acquiring lock: {Name:mk4023283b30b374c3f04c8805d539e68824c0b8 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0407 10:23:34.801052   33435 install.go:115] Validating docker-machine-driver-hyperkit, PATH=/Users/priyawadhwa/.minikube/bin:/usr/local/bin:/bin:/sbin:/usr/bin:/usr/local/sbin:/Users/priyawadhwa/google-cloud-sdk/bin:/usr/local/git/current/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/priyawadhwa/skaffold/out:/Users/priyawadhwa/minikube/out:/Users/priyawadhwa/bin:/Users/priyawadhwa/go/bin:/Users/priyawadhwa/.skaffold/builders
I0407 10:23:34.821606   33435 install.go:77] stdout: /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:23:34.821634   33435 install.go:79] /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit looks good
I0407 10:23:34.821735   33435 start.go:946] Using suggested 6000MB memory alloc based on sys=32768MB, container=0MB
I0407 10:23:34.821831   33435 preload.go:81] Checking if preload exists for k8s version v1.18.0 and runtime docker
I0407 10:23:34.821859   33435 preload.go:97] Found local preload: /Users/priyawadhwa/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v2-v1.18.0-docker-overlay2-amd64.tar.lz4
I0407 10:23:34.821869   33435 cache.go:46] Caching tarball of preloaded images
I0407 10:23:34.821882   33435 preload.go:123] Found /Users/priyawadhwa/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v2-v1.18.0-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0407 10:23:34.821885   33435 cache.go:49] Finished downloading the preloaded tar for v1.18.0 on docker
I0407 10:23:34.821944   33435 profile.go:138] Saving config to /Users/priyawadhwa/.minikube/profiles/minikube/config.json ...
I0407 10:23:34.822473   33435 cache.go:117] Successfully downloaded all kic artifacts
I0407 10:23:34.822498   33435 start.go:260] acquiring machines lock for minikube: {Name:mkebca633b724643a1b85154f459ac1b2beb3874 Clock:{} Delay:500ms Timeout:15m0s Cancel:<nil>}
I0407 10:23:34.822571   33435 start.go:264] acquired machines lock for "minikube" in 59.582Âµs
I0407 10:23:34.822589   33435 start.go:90] Skipping create...Using existing machine configuration
I0407 10:23:34.822597   33435 fix.go:53] fixHost starting: m01
I0407 10:23:34.822891   33435 main.go:110] libmachine: Found binary path at /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:23:34.822917   33435 main.go:110] libmachine: Launching plugin server for driver hyperkit
I0407 10:23:34.836829   33435 main.go:110] libmachine: Plugin server listening at address 127.0.0.1:57994
I0407 10:23:34.837313   33435 main.go:110] libmachine: () Calling .GetVersion
I0407 10:23:34.837767   33435 main.go:110] libmachine: Using API Version  1
I0407 10:23:34.837779   33435 main.go:110] libmachine: () Calling .SetConfigRaw
I0407 10:23:34.838089   33435 main.go:110] libmachine: () Calling .GetMachineName
I0407 10:23:34.838241   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:34.838360   33435 main.go:110] libmachine: (minikube) Calling .GetState
I0407 10:23:34.838479   33435 main.go:110] libmachine: (minikube) DBG | exe=/Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit uid=0
I0407 10:23:34.838729   33435 main.go:110] libmachine: (minikube) DBG | hyperkit pid from json: 33378
I0407 10:23:34.839890   33435 main.go:110] libmachine: (minikube) DBG | hyperkit pid 33378 missing from process table
I0407 10:23:34.839945   33435 fix.go:105] recreateIfNeeded on minikube: state=Stopped err=<nil>
I0407 10:23:34.839967   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:34.840078   33435 fix.go:109] exists: true err=<nil>
I0407 10:23:34.840085   33435 fix.go:110] %!q(<nil>) vs "machine does not exist"
W0407 10:23:34.840091   33435 fix.go:130] unexpected machine state, will restart: <nil>
* Retarting existing hyperkit VM for "minikube" ...
I0407 10:23:34.852716   33435 main.go:110] libmachine: (minikube) Calling .Start
I0407 10:23:34.852924   33435 main.go:110] libmachine: (minikube) DBG | exe=/Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit uid=0
I0407 10:23:34.852941   33435 main.go:110] libmachine: (minikube) DBG | clean start, hyperkit pid file doesn't exist: /Users/priyawadhwa/.minikube/machines/minikube/hyperkit.pid
I0407 10:23:34.852998   33435 main.go:110] libmachine: (minikube) DBG | Using UUID 5d81ac2a-78f4-11ea-b6e8-acde48001122
I0407 10:23:34.945283   33435 main.go:110] libmachine: (minikube) DBG | Generated MAC 5e:2b:6c:d8:39:3d
I0407 10:23:34.945311   33435 main.go:110] libmachine: (minikube) DBG | Starting with cmdline: loglevel=3 console=ttyS0 console=tty0 noembed nomodeset norestore waitusb=10 systemd.legacy_systemd_cgroup_controller=yes random.trust_cpu=on hw_rng_model=virtio base host=minikube
I0407 10:23:34.947182   33435 main.go:110] libmachine: (minikube) DBG | Attempt 0
I0407 10:23:34.947202   33435 main.go:110] libmachine: (minikube) DBG | exe=/Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit uid=0
I0407 10:23:34.947888   33435 main.go:110] libmachine: (minikube) DBG | hyperkit pid from json: 33450
I0407 10:23:34.949225   33435 main.go:110] libmachine: (minikube) DBG | Searching for 5e:2b:6c:d8:39:3d in /var/db/dhcpd_leases ...
I0407 10:23:34.950317   33435 main.go:110] libmachine: (minikube) DBG | Found 180 entries in /var/db/dhcpd_leases!
I0407 10:23:34.950335   33435 main.go:110] libmachine: (minikube) DBG | dhcp entry: {Name:minikube IPAddress:192.168.64.181 HWAddress:5e:2b:6c:d8:39:3d ID:1,5e:2b:6c:d8:39:3d Lease:0x5e8e0862}
I0407 10:23:34.950351   33435 main.go:110] libmachine: (minikube) DBG | Found match: 5e:2b:6c:d8:39:3d
I0407 10:23:34.950378   33435 main.go:110] libmachine: (minikube) DBG | IP: 192.168.64.181
I0407 10:23:34.950459   33435 main.go:110] libmachine: (minikube) Calling .GetConfigRaw
I0407 10:23:34.951202   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:34.951337   33435 machine.go:86] provisioning docker machine ...
I0407 10:23:34.951350   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:34.951504   33435 main.go:110] libmachine: (minikube) Calling .GetMachineName
I0407 10:23:34.951633   33435 buildroot.go:163] provisioning hostname "minikube"
I0407 10:23:34.951645   33435 main.go:110] libmachine: (minikube) Calling .GetMachineName
I0407 10:23:34.951778   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:34.951921   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:34.952028   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:34.952158   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:34.952264   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:34.952412   33435 main.go:110] libmachine: Using SSH client type: native
I0407 10:23:34.952621   33435 main.go:110] libmachine: &{{{<nil> 0 [] [] []} docker [0x43bec70] 0x43bec40 <nil>  [] 0s} 192.168.64.181 22 <nil> <nil>}
I0407 10:23:34.952631   33435 main.go:110] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0407 10:23:35.005656   33435 main.go:110] libmachine: (minikube) DBG | 2020/04/07 10:23:35 fcntl(F_PUNCHHOLE) failed: host filesystem does not support sparse files: Operation not permitted
I0407 10:23:35.476596   33435 main.go:110] libmachine: (minikube) DBG | 2020/04/07 10:23:35 rdmsr to register 0x140 on vcpu 0
I0407 10:23:35.582180   33435 main.go:110] libmachine: (minikube) DBG | 2020/04/07 10:23:35 rdmsr to register 0x140 on vcpu 1
I0407 10:23:39.566585   33435 main.go:110] libmachine: (minikube) DBG | 2020/04/07 10:23:39 rdmsr to register 0x64e on vcpu 0
I0407 10:23:39.566599   33435 main.go:110] libmachine: (minikube) DBG | 2020/04/07 10:23:39 rdmsr to register 0x34 on vcpu 0
I0407 10:23:46.092426   33435 main.go:110] libmachine: SSH cmd err, output: <nil>: minikube

I0407 10:23:46.092462   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:46.092638   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:46.092763   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.092918   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.093056   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:46.093201   33435 main.go:110] libmachine: Using SSH client type: native
I0407 10:23:46.093362   33435 main.go:110] libmachine: &{{{<nil> 0 [] [] []} docker [0x43bec70] 0x43bec40 <nil>  [] 0s} 192.168.64.181 22 <nil> <nil>}
I0407 10:23:46.093376   33435 main.go:110] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0407 10:23:46.153515   33435 main.go:110] libmachine: SSH cmd err, output: <nil>: 
I0407 10:23:46.153538   33435 buildroot.go:169] set auth options {CertDir:/Users/priyawadhwa/.minikube CaCertPath:/Users/priyawadhwa/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/priyawadhwa/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/priyawadhwa/.minikube/machines/server.pem ServerKeyPath:/Users/priyawadhwa/.minikube/machines/server-key.pem ClientKeyPath:/Users/priyawadhwa/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/priyawadhwa/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/priyawadhwa/.minikube}
I0407 10:23:46.153562   33435 buildroot.go:171] setting up certificates
I0407 10:23:46.153570   33435 provision.go:83] configureAuth start
I0407 10:23:46.153577   33435 main.go:110] libmachine: (minikube) Calling .GetMachineName
I0407 10:23:46.153744   33435 main.go:110] libmachine: (minikube) Calling .GetIP
I0407 10:23:46.153858   33435 provision.go:132] copyHostCerts
I0407 10:23:46.154781   33435 provision.go:106] generating server cert: /Users/priyawadhwa/.minikube/machines/server.pem ca-key=/Users/priyawadhwa/.minikube/certs/ca.pem private-key=/Users/priyawadhwa/.minikube/certs/ca-key.pem org=priyawadhwa.minikube san=[192.168.64.181 localhost 127.0.0.1]
I0407 10:23:46.310500   33435 provision.go:160] copyRemoteCerts
I0407 10:23:46.310515   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:46.310825   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:46.310975   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.311145   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:46.339466   33435 ssh_runner.go:101] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0407 10:23:46.348050   33435 ssh_runner.go:155] Checked if /etc/docker/server.pem exists, but got error: Process exited with status 1
I0407 10:23:46.348235   33435 ssh_runner.go:174] Transferring 1131 bytes to /etc/docker/server.pem
I0407 10:23:46.348735   33435 ssh_runner.go:193] server.pem: copied 1131 bytes
I0407 10:23:46.360190   33435 ssh_runner.go:155] Checked if /etc/docker/server-key.pem exists, but got error: Process exited with status 1
I0407 10:23:46.360403   33435 ssh_runner.go:174] Transferring 1675 bytes to /etc/docker/server-key.pem
I0407 10:23:46.360915   33435 ssh_runner.go:193] server-key.pem: copied 1675 bytes
I0407 10:23:46.373028   33435 ssh_runner.go:155] Checked if /etc/docker/ca.pem exists, but got error: Process exited with status 1
I0407 10:23:46.373408   33435 ssh_runner.go:174] Transferring 1050 bytes to /etc/docker/ca.pem
I0407 10:23:46.373921   33435 ssh_runner.go:193] ca.pem: copied 1050 bytes
I0407 10:23:46.382531   33435 provision.go:86] configureAuth took 228.94734ms
I0407 10:23:46.382541   33435 buildroot.go:186] setting minikube options for container-runtime
I0407 10:23:46.382733   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:46.383006   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:46.383215   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:46.383433   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.383650   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.383781   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:46.383999   33435 main.go:110] libmachine: Using SSH client type: native
I0407 10:23:46.384249   33435 main.go:110] libmachine: &{{{<nil> 0 [] [] []} docker [0x43bec70] 0x43bec40 <nil>  [] 0s} 192.168.64.181 22 <nil> <nil>}
I0407 10:23:46.384258   33435 main.go:110] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0407 10:23:46.444513   33435 main.go:110] libmachine: SSH cmd err, output: <nil>: tmpfs

I0407 10:23:46.444526   33435 buildroot.go:70] root file system type: tmpfs
I0407 10:23:46.444677   33435 provision.go:295] Updating docker unit: /lib/systemd/system/docker.service ...
I0407 10:23:46.444703   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:46.444876   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:46.445042   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.445159   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.445277   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:46.445435   33435 main.go:110] libmachine: Using SSH client type: native
I0407 10:23:46.445582   33435 main.go:110] libmachine: &{{{<nil> 0 [] [] []} docker [0x43bec70] 0x43bec40 <nil>  [] 0s} 192.168.64.181 22 <nil> <nil>}
I0407 10:23:46.445645   33435 main.go:110] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target  minikube-automount.service docker.socket
Requires= minikube-automount.service docker.socket 

[Service]
Type=notify



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=hyperkit --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0407 10:23:46.509414   33435 main.go:110] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target  minikube-automount.service docker.socket
Requires= minikube-automount.service docker.socket 

[Service]
Type=notify



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=hyperkit --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP 

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0407 10:23:46.509435   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:46.509603   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:46.509725   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.509859   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.509987   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:46.510125   33435 main.go:110] libmachine: Using SSH client type: native
I0407 10:23:46.510276   33435 main.go:110] libmachine: &{{{<nil> 0 [] [] []} docker [0x43bec70] 0x43bec40 <nil>  [] 0s} 192.168.64.181 22 <nil> <nil>}
I0407 10:23:46.510292   33435 main.go:110] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo sudo systemctl -f restart docker; }
I0407 10:23:46.937638   33435 main.go:110] libmachine: SSH cmd err, output: <nil>: diff: can't stat '/lib/systemd/system/docker.service': No such file or directory

I0407 10:23:46.937669   33435 machine.go:89] provisioned docker machine in 11.986236434s
I0407 10:23:46.937675   33435 start.go:189] post-start starting for "minikube" (driver="hyperkit")
I0407 10:23:46.937679   33435 start.go:199] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0407 10:23:46.937712   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:46.938043   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:46.938208   33435 start.go:238] Creating SSH client and returning SSHRunner for "hyperkit" driver
I0407 10:23:46.938225   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:46.938425   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:46.938605   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.938803   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:46.966014   33435 ssh_runner.go:101] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0407 10:23:46.972919   33435 ssh_runner.go:101] Run: cat /etc/os-release
I0407 10:23:46.976177   33435 info.go:96] Remote host: Buildroot 2019.02.9
I0407 10:23:46.976190   33435 filesync.go:118] Scanning /Users/priyawadhwa/.minikube/addons for local assets ...
I0407 10:23:46.976338   33435 filesync.go:118] Scanning /Users/priyawadhwa/.minikube/files for local assets ...
I0407 10:23:46.976386   33435 start.go:192] post-start completed in 38.704198ms
I0407 10:23:46.976400   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:46.976573   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:46.976695   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:46.976821   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.976959   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:46.977095   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:46.977240   33435 main.go:110] libmachine: Using SSH client type: native
I0407 10:23:46.977394   33435 main.go:110] libmachine: &{{{<nil> 0 [] [] []} docker [0x43bec70] 0x43bec40 <nil>  [] 0s} 192.168.64.181 22 <nil> <nil>}
I0407 10:23:46.977405   33435 main.go:110] libmachine: About to run SSH command:
date +%s.%N
I0407 10:23:47.036284   33435 main.go:110] libmachine: SSH cmd err, output: <nil>: 1586280227.036287002

I0407 10:23:47.036295   33435 fix.go:199] guest clock: 1586280227.036287002
I0407 10:23:47.036301   33435 fix.go:212] Guest: 2020-04-07 10:23:47.036287002 -0700 PDT Remote: 2020-04-07 10:23:46.976561 -0700 PDT m=+12.328047850 (delta=59.726002ms)
I0407 10:23:47.036315   33435 fix.go:183] guest clock delta is within tolerance: 59.726002ms
I0407 10:23:47.036319   33435 fix.go:55] fixHost completed within 12.213635277s
I0407 10:23:47.036322   33435 start.go:77] releasing machines lock for "minikube", held for 12.213655106s
I0407 10:23:47.036357   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:47.036519   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:47.036644   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:47.036782   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:47.036903   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:47.037035   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:47.064555   33435 main.go:110] libmachine: (minikube) Calling .GetIP
I0407 10:23:47.064776   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:47.064994   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:47.065624   33435 ssh_runner.go:101] Run: nslookup kubernetes.io -type=ns
I0407 10:23:47.068644   33435 start.go:429] [nslookup kubernetes.io -type=ns] failed: nslookup kubernetes.io -type=ns: Process exited with status 1
stdout:

stderr:
nslookup: bad address '-type=ns'
 which might be okay will retry nslookup without query type
I0407 10:23:47.068683   33435 ssh_runner.go:101] Run: nslookup kubernetes.io
I0407 10:23:47.071804   33435 ssh_runner.go:101] Run: curl -sS https://k8s.gcr.io/
I0407 10:23:47.270378   33435 profile.go:138] Saving config to /Users/priyawadhwa/.minikube/profiles/minikube/config.json ...
I0407 10:23:47.271193   33435 preload.go:81] Checking if preload exists for k8s version v1.18.0 and runtime docker
I0407 10:23:47.271223   33435 preload.go:97] Found local preload: /Users/priyawadhwa/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v2-v1.18.0-docker-overlay2-amd64.tar.lz4
I0407 10:23:47.271299   33435 ssh_runner.go:101] Run: docker images --format {{.Repository}}:{{.Tag}}
I0407 10:23:47.297705   33435 docker.go:367] Got preloaded images: -- stdout --
k8s.gcr.io/kube-proxy:v1.18.0
k8s.gcr.io/kube-controller-manager:v1.18.0
k8s.gcr.io/kube-apiserver:v1.18.0
k8s.gcr.io/kube-scheduler:v1.18.0
kubernetesui/dashboard:v2.0.0-rc6
k8s.gcr.io/pause:3.2
k8s.gcr.io/coredns:1.6.7
kindest/kindnetd:0.5.3
k8s.gcr.io/etcd:3.4.3-0
kubernetesui/metrics-scraper:v1.0.2
gcr.io/k8s-minikube/storage-provisioner:v1.8.1

-- /stdout --
I0407 10:23:47.297723   33435 docker.go:305] Images already preloaded, skipping extraction
I0407 10:23:47.297796   33435 ssh_runner.go:101] Run: sudo systemctl is-active --quiet service containerd
I0407 10:23:47.306422   33435 ssh_runner.go:101] Run: sudo systemctl is-active --quiet service crio
I0407 10:23:47.315201   33435 ssh_runner.go:101] Run: sudo systemctl start docker
I0407 10:23:47.321534   33435 ssh_runner.go:101] Run: docker version --format {{.Server.Version}}
* Preparing Kubernetes v1.18.0 on Docker 19.03.8 ...
I0407 10:23:47.371677   33435 main.go:110] libmachine: (minikube) Calling .GetIP
I0407 10:23:47.372038   33435 settings.go:123] acquiring lock: {Name:mk08b640e5210e49e03676d45db439487960f8cf Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0407 10:23:47.372208   33435 settings.go:131] Updating kubeconfig:  /Users/priyawadhwa/.kube/config
I0407 10:23:47.377403   33435 lock.go:35] WriteFile acquiring /Users/priyawadhwa/.kube/config: {Name:mk9e17d05877010c3868e9fdf2409e58ffec1b81 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0407 10:23:47.378098   33435 main.go:110] libmachine: Found binary path at /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:23:47.378128   33435 main.go:110] libmachine: Launching plugin server for driver hyperkit
I0407 10:23:47.394180   33435 main.go:110] libmachine: Plugin server listening at address 127.0.0.1:58016
I0407 10:23:47.394746   33435 main.go:110] libmachine: () Calling .GetVersion
I0407 10:23:47.395245   33435 main.go:110] libmachine: Using API Version  1
I0407 10:23:47.395257   33435 main.go:110] libmachine: () Calling .SetConfigRaw
I0407 10:23:47.395589   33435 main.go:110] libmachine: () Calling .GetMachineName
I0407 10:23:47.395732   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:47.395845   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:23:47.395949   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:23:47.396044   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:23:47.396145   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:23:47.396246   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:23:47.424785   33435 preload.go:81] Checking if preload exists for k8s version v1.18.0 and runtime docker
I0407 10:23:47.424822   33435 preload.go:97] Found local preload: /Users/priyawadhwa/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v2-v1.18.0-docker-overlay2-amd64.tar.lz4
I0407 10:23:47.424869   33435 ssh_runner.go:101] Run: docker images --format {{.Repository}}:{{.Tag}}
I0407 10:23:47.450287   33435 docker.go:367] Got preloaded images: -- stdout --
k8s.gcr.io/kube-proxy:v1.18.0
k8s.gcr.io/kube-scheduler:v1.18.0
k8s.gcr.io/kube-controller-manager:v1.18.0
k8s.gcr.io/kube-apiserver:v1.18.0
kubernetesui/dashboard:v2.0.0-rc6
k8s.gcr.io/pause:3.2
k8s.gcr.io/coredns:1.6.7
kindest/kindnetd:0.5.3
k8s.gcr.io/etcd:3.4.3-0
kubernetesui/metrics-scraper:v1.0.2
gcr.io/k8s-minikube/storage-provisioner:v1.8.1

-- /stdout --
I0407 10:23:47.450300   33435 docker.go:305] Images already preloaded, skipping extraction
I0407 10:23:47.450359   33435 ssh_runner.go:101] Run: docker images --format {{.Repository}}:{{.Tag}}
I0407 10:23:47.473907   33435 docker.go:367] Got preloaded images: -- stdout --
k8s.gcr.io/kube-proxy:v1.18.0
k8s.gcr.io/kube-apiserver:v1.18.0
k8s.gcr.io/kube-scheduler:v1.18.0
k8s.gcr.io/kube-controller-manager:v1.18.0
kubernetesui/dashboard:v2.0.0-rc6
k8s.gcr.io/pause:3.2
k8s.gcr.io/coredns:1.6.7
kindest/kindnetd:0.5.3
k8s.gcr.io/etcd:3.4.3-0
kubernetesui/metrics-scraper:v1.0.2
gcr.io/k8s-minikube/storage-provisioner:v1.8.1

-- /stdout --
I0407 10:23:47.473925   33435 cache_images.go:68] Images are preloaded, skipping loading
I0407 10:23:47.473962   33435 kubeadm.go:125] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet: AdvertiseAddress:192.168.64.181 APIServerPort:8443 KubernetesVersion:v1.18.0 EtcdDataDir:/var/lib/minikube/etcd ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket: ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.64.181"]]}] FeatureArgs:map[] NoTaintMaster:true NodeIP:192.168.64.181 ControlPlaneAddress:192.168.64.181}
I0407 10:23:47.474054   33435 kubeadm.go:129] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.64.181
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: /var/run/dockershim.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.64.181
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.64.181"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: 192.168.64.181:8443
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
kubernetesVersion: v1.18.0
networking:
  dnsDomain: cluster.local
  podSubnet: ""
  serviceSubnet: 10.96.0.0/12

I0407 10:23:47.474121   33435 ssh_runner.go:101] Run: docker info --format {{.CgroupDriver}}
I0407 10:23:47.502310   33435 kubeadm.go:659] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.18.0/kubelet --authorization-mode=Webhook --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --cgroup-driver=systemd --client-ca-file=/var/lib/minikube/certs/ca.crt --cluster-domain=cluster.local --config=/var/lib/kubelet/config.yaml --container-runtime=docker --fail-swap-on=false --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.64.181 --pod-manifest-path=/etc/kubernetes/manifests

[Install]
 config:
{KubernetesVersion:v1.18.0 ClusterName:minikube APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false NodeIP: NodePort:0 NodeName:}
I0407 10:23:47.502377   33435 ssh_runner.go:101] Run: sudo ls /var/lib/minikube/binaries/v1.18.0
I0407 10:23:47.506933   33435 binaries.go:42] Found k8s binaries, skipping transfer
I0407 10:23:47.506997   33435 ssh_runner.go:101] Run: sudo mkdir -p /var/tmp/minikube /etc/systemd/system/kubelet.service.d /lib/systemd/system
I0407 10:23:47.512162   33435 ssh_runner.go:174] Transferring 1053 bytes to /var/tmp/minikube/kubeadm.yaml.new
I0407 10:23:47.512650   33435 ssh_runner.go:193] kubeadm.yaml.new: copied 1053 bytes
I0407 10:23:47.522602   33435 ssh_runner.go:174] Transferring 535 bytes to /etc/systemd/system/kubelet.service.d/10-kubeadm.conf.new
I0407 10:23:47.523067   33435 ssh_runner.go:193] 10-kubeadm.conf.new: copied 535 bytes
I0407 10:23:47.532265   33435 ssh_runner.go:174] Transferring 349 bytes to /lib/systemd/system/kubelet.service.new
I0407 10:23:47.532692   33435 ssh_runner.go:193] kubelet.service.new: copied 349 bytes
I0407 10:23:47.541486   33435 ssh_runner.go:101] Run: /bin/bash -c "pgrep kubelet && diff -u /lib/systemd/system/kubelet.service /lib/systemd/system/kubelet.service.new && diff -u /etc/systemd/system/kubelet.service.d/10-kubeadm.conf /etc/systemd/system/kubelet.service.d/10-kubeadm.conf.new"
I0407 10:23:47.547476   33435 ssh_runner.go:101] Run: /bin/bash -c "sudo cp /lib/systemd/system/kubelet.service.new /lib/systemd/system/kubelet.service && sudo cp /etc/systemd/system/kubelet.service.d/10-kubeadm.conf.new /etc/systemd/system/kubelet.service.d/10-kubeadm.conf && sudo systemctl daemon-reload && sudo systemctl restart kubelet"
I0407 10:23:47.624806   33435 certs.go:51] Setting up /Users/priyawadhwa/.minikube/profiles/minikube for IP: 192.168.64.181
I0407 10:23:47.624945   33435 certs.go:167] skipping minikubeCA CA generation: /Users/priyawadhwa/.minikube/ca.key
I0407 10:23:47.625072   33435 certs.go:167] skipping proxyClientCA CA generation: /Users/priyawadhwa/.minikube/proxy-client-ca.key
I0407 10:23:47.625195   33435 certs.go:261] skipping minikube-user signed cert generation: /Users/priyawadhwa/.minikube/profiles/minikube/client.key
I0407 10:23:47.625333   33435 certs.go:261] skipping minikube signed cert generation: /Users/priyawadhwa/.minikube/profiles/minikube/apiserver.key.6c18ae63
I0407 10:23:47.625397   33435 certs.go:261] skipping aggregator signed cert generation: /Users/priyawadhwa/.minikube/profiles/minikube/proxy-client.key
I0407 10:23:47.630256   33435 ssh_runner.go:244] found /var/lib/minikube/certs/apiserver.crt: 1306 bytes, modified at 2020-04-07 17:22:55.85892281 +0000 +0000
I0407 10:23:47.630270   33435 ssh_runner.go:158] Skipping copying /var/lib/minikube/certs/apiserver.crt as it already exists
I0407 10:23:47.635739   33435 ssh_runner.go:244] found /var/lib/minikube/certs/apiserver.key: 1675 bytes, modified at 2020-04-07 17:22:55.859761186 +0000 +0000
I0407 10:23:47.635755   33435 ssh_runner.go:158] Skipping copying /var/lib/minikube/certs/apiserver.key as it already exists
I0407 10:23:47.639615   33435 ssh_runner.go:244] found /var/lib/minikube/certs/proxy-client.crt: 1103 bytes, modified at 2020-04-07 17:22:56.029894261 +0000 +0000
I0407 10:23:47.639627   33435 ssh_runner.go:158] Skipping copying /var/lib/minikube/certs/proxy-client.crt as it already exists
I0407 10:23:47.643443   33435 ssh_runner.go:244] found /var/lib/minikube/certs/proxy-client.key: 1675 bytes, modified at 2020-04-07 17:22:56.03051808 +0000 +0000
I0407 10:23:47.643456   33435 ssh_runner.go:158] Skipping copying /var/lib/minikube/certs/proxy-client.key as it already exists
I0407 10:23:47.647017   33435 ssh_runner.go:244] found /var/lib/minikube/certs/ca.crt: 1066 bytes, modified at 2020-03-12 22:58:51.25524494 +0000 +0000
I0407 10:23:47.647032   33435 ssh_runner.go:158] Skipping copying /var/lib/minikube/certs/ca.crt as it already exists
I0407 10:23:47.650909   33435 ssh_runner.go:244] found /var/lib/minikube/certs/ca.key: 1675 bytes, modified at 2020-03-12 22:58:51.255561666 +0000 +0000
I0407 10:23:47.650923   33435 ssh_runner.go:158] Skipping copying /var/lib/minikube/certs/ca.key as it already exists
I0407 10:23:47.654432   33435 ssh_runner.go:244] found /var/lib/minikube/certs/proxy-client-ca.crt: 1074 bytes, modified at 2020-03-12 22:58:51.315264397 +0000 +0000
I0407 10:23:47.654482   33435 ssh_runner.go:158] Skipping copying /var/lib/minikube/certs/proxy-client-ca.crt as it already exists
I0407 10:23:47.657439   33435 ssh_runner.go:244] found /var/lib/minikube/certs/proxy-client-ca.key: 1675 bytes, modified at 2020-03-12 22:58:51.315564729 +0000 +0000
I0407 10:23:47.657450   33435 ssh_runner.go:158] Skipping copying /var/lib/minikube/certs/proxy-client-ca.key as it already exists
I0407 10:23:47.660633   33435 ssh_runner.go:155] Checked if /usr/share/ca-certificates/minikubeCA.pem exists, but got error: Process exited with status 1
I0407 10:23:47.660905   33435 ssh_runner.go:174] Transferring 1066 bytes to /usr/share/ca-certificates/minikubeCA.pem
I0407 10:23:47.661399   33435 ssh_runner.go:193] minikubeCA.pem: copied 1066 bytes
I0407 10:23:47.672560   33435 ssh_runner.go:174] Transferring 398 bytes to /var/lib/minikube/kubeconfig
I0407 10:23:47.673075   33435 ssh_runner.go:193] kubeconfig: copied 398 bytes
I0407 10:23:47.684865   33435 ssh_runner.go:101] Run: openssl version
I0407 10:23:47.688189   33435 ssh_runner.go:101] Run: sudo /bin/bash -c "test -f /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0407 10:23:47.694769   33435 ssh_runner.go:101] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0407 10:23:47.703119   33435 ssh_runner.go:101] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0407 10:23:47.709688   33435 kubeadm.go:279] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:file:///Users/priyawadhwa/minikube/out/minikube.iso Memory:6000 CPUs:2 DiskSize:20000 Driver:hyperkit HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.99.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio KubernetesConfig:{KubernetesVersion:v1.18.0 ClusterName:minikube APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false NodeIP: NodePort:0 NodeName:} Nodes:[{Name:m01 IP:192.168.64.181 Port:8443 KubernetesVersion:v1.18.0 ControlPlane:true Worker:true}] Addons:map[]}
I0407 10:23:47.709767   33435 ssh_runner.go:101] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0407 10:23:47.733181   33435 ssh_runner.go:101] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0407 10:23:47.738240   33435 kubeadm.go:290] found existing configuration files, will attempt cluster restart
I0407 10:23:47.738254   33435 kubeadm.go:427] restartCluster start
I0407 10:23:47.738318   33435 ssh_runner.go:101] Run: sudo test -d /data/minikube
I0407 10:23:47.744008   33435 kubeadm.go:150] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0407 10:23:47.749925   33435 ssh_runner.go:101] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I0407 10:23:47.754123   33435 kubeadm.go:397] needs reset: configs differ:

** stderr ** 
diff: can't stat '/var/tmp/minikube/kubeadm.yaml': No such file or directory

** /stderr **
I0407 10:23:47.754204   33435 ssh_runner.go:101] Run: sudo /bin/bash -c "grep https://192.168.64.181:8443 /etc/kubernetes/admin.conf || sudo rm -f /etc/kubernetes/admin.conf"
I0407 10:23:47.764375   33435 ssh_runner.go:101] Run: sudo /bin/bash -c "grep https://192.168.64.181:8443 /etc/kubernetes/kubelet.conf || sudo rm -f /etc/kubernetes/kubelet.conf"
I0407 10:23:47.776091   33435 ssh_runner.go:101] Run: sudo /bin/bash -c "grep https://192.168.64.181:8443 /etc/kubernetes/controller-manager.conf || sudo rm -f /etc/kubernetes/controller-manager.conf"
I0407 10:23:47.783677   33435 ssh_runner.go:101] Run: sudo /bin/bash -c "grep https://192.168.64.181:8443 /etc/kubernetes/scheduler.conf || sudo rm -f /etc/kubernetes/scheduler.conf"
I0407 10:23:47.791365   33435 ssh_runner.go:101] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0407 10:23:47.795587   33435 kubeadm.go:483] resetting cluster from /var/tmp/minikube/kubeadm.yaml
I0407 10:23:47.795596   33435 ssh_runner.go:101] Run: /bin/bash -c "sudo env PATH=/var/lib/minikube/binaries/v1.18.0:$PATH kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml"
I0407 10:23:47.861239   33435 ssh_runner.go:101] Run: /bin/bash -c "sudo env PATH=/var/lib/minikube/binaries/v1.18.0:$PATH kubeadm init phase kubeconfig all --config /var/tmp/minikube/kubeadm.yaml"
I0407 10:23:49.026461   33435 ssh_runner.go:141] Completed: /bin/bash -c "sudo env PATH=/var/lib/minikube/binaries/v1.18.0:$PATH kubeadm init phase kubeconfig all --config /var/tmp/minikube/kubeadm.yaml": (1.16517427s)
I0407 10:23:49.026491   33435 ssh_runner.go:101] Run: /bin/bash -c "sudo env PATH=/var/lib/minikube/binaries/v1.18.0:$PATH kubeadm init phase control-plane all --config /var/tmp/minikube/kubeadm.yaml"
I0407 10:23:49.082122   33435 ssh_runner.go:101] Run: /bin/bash -c "sudo env PATH=/var/lib/minikube/binaries/v1.18.0:$PATH kubeadm init phase etcd local --config /var/tmp/minikube/kubeadm.yaml"
I0407 10:23:49.138400   33435 kverify.go:52] waiting for apiserver process to appear ...
I0407 10:23:49.138483   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:49.646355   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:50.149256   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:50.649145   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:51.149246   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:51.649989   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:52.148425   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:52.649208   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:53.146855   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:53.649214   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:54.148834   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:54.644894   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:55.144927   33435 ssh_runner.go:101] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0407 10:23:55.155319   33435 kverify.go:72] duration metric: took 6.016881442s to wait for apiserver process to appear ...
I0407 10:23:55.155339   33435 kverify.go:187] waiting for apiserver healthz status ...
I0407 10:23:55.155349   33435 kverify.go:297] Checking apiserver healthz at https://192.168.64.181:8443/healthz ...
W0407 10:24:00.257120   33435 kverify.go:315] https://192.168.64.181:8443/healthz response: <nil> &{Status:403 Forbidden StatusCode:403 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Length:[192] Content-Type:[application/json] Date:[Tue, 07 Apr 2020 17:24:00 GMT] X-Content-Type-Options:[nosniff]] Body:0xc0000a9940 ContentLength:192 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc0004eb100 TLS:0xc00002fc30}
I0407 10:24:00.757892   33435 kverify.go:297] Checking apiserver healthz at https://192.168.64.181:8443/healthz ...
W0407 10:24:00.766084   33435 kverify.go:315] https://192.168.64.181:8443/healthz response: <nil> &{Status:500 Internal Server Error StatusCode:500 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Length:[864] Content-Type:[text/plain; charset=utf-8] Date:[Tue, 07 Apr 2020 17:24:00 GMT] X-Content-Type-Options:[nosniff]] Body:0xc000824b80 ContentLength:864 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc0004eb200 TLS:0xc0001ba790}
I0407 10:24:01.260623   33435 kverify.go:297] Checking apiserver healthz at https://192.168.64.181:8443/healthz ...
W0407 10:24:01.267191   33435 kverify.go:315] https://192.168.64.181:8443/healthz response: <nil> &{Status:500 Internal Server Error StatusCode:500 Proto:HTTP/1.1 ProtoMajor:1 ProtoMinor:1 Header:map[Content-Length:[843] Content-Type:[text/plain; charset=utf-8] Date:[Tue, 07 Apr 2020 17:24:01 GMT] X-Content-Type-Options:[nosniff]] Body:0xc0000a9b40 ContentLength:843 TransferEncoding:[] Close:false Uncompressed:false Trailer:map[] Request:0xc0002c5000 TLS:0xc0006c8420}
I0407 10:24:01.762455   33435 kverify.go:297] Checking apiserver healthz at https://192.168.64.181:8443/healthz ...
I0407 10:24:01.778709   33435 kverify.go:239] control plane version: v1.18.0
I0407 10:24:01.778724   33435 kverify.go:230] duration metric: took 6.623332479s to wait for apiserver health ...
I0407 10:24:01.778730   33435 kverify.go:150] waiting for kube-system pods to appear ...
I0407 10:24:01.787427   33435 kverify.go:168] 5 kube-system pods found
I0407 10:24:01.787439   33435 kverify.go:170] "etcd-minikube" [bc5d3233-317b-43c7-8620-df73db10cde0] Running
I0407 10:24:01.787443   33435 kverify.go:170] "kube-apiserver-minikube" [a50de1eb-8e7e-4a50-aa43-2d8e18ba4dc0] Running
I0407 10:24:01.787447   33435 kverify.go:170] "kube-controller-manager-minikube" [00feb975-d6b0-40c6-a9a9-2936db9bc99a] Running
I0407 10:24:01.787450   33435 kverify.go:170] "kube-scheduler-minikube" [6592756a-f2fc-44aa-8268-1fcd2a33d958] Running
I0407 10:24:01.787455   33435 kverify.go:170] "storage-provisioner" [79c860bd-c4cb-460c-8b5c-e3c01a266daf] Pending: PodScheduled:Unschedulable (0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate.)
I0407 10:24:01.787460   33435 kverify.go:181] duration metric: took 8.726151ms to wait for pod list to return data ...
I0407 10:24:01.787469   33435 ssh_runner.go:101] Run: /bin/bash -c "sudo env PATH=/var/lib/minikube/binaries/v1.18.0:$PATH kubeadm init phase addon all --config /var/tmp/minikube/kubeadm.yaml"
I0407 10:24:01.935047   33435 ssh_runner.go:101] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0407 10:24:01.942594   33435 ops.go:35] apiserver oom_adj: -16
I0407 10:24:01.942604   33435 kubeadm.go:431] restartCluster took 14.204242746s
I0407 10:24:01.942609   33435 kubeadm.go:281] StartCluster complete in 14.232824812s
I0407 10:24:01.942756   33435 addons.go:280] enableAddons start: toEnable=map[default-storageclass:true storage-provisioner:true], additional=[]
* Enabling addons: default-storageclass, storage-provisioner
I0407 10:24:01.957575   33435 addons.go:45] Setting default-storageclass=true in profile "minikube"
I0407 10:24:01.957795   33435 addons.go:230] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0407 10:24:01.964604   33435 main.go:110] libmachine: Found binary path at /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:24:01.964907   33435 main.go:110] libmachine: Launching plugin server for driver hyperkit
I0407 10:24:01.979464   33435 main.go:110] libmachine: Plugin server listening at address 127.0.0.1:58027
I0407 10:24:01.979954   33435 main.go:110] libmachine: () Calling .GetVersion
I0407 10:24:01.980394   33435 main.go:110] libmachine: Using API Version  1
I0407 10:24:01.980405   33435 main.go:110] libmachine: () Calling .SetConfigRaw
I0407 10:24:01.980690   33435 main.go:110] libmachine: () Calling .GetMachineName
I0407 10:24:01.980810   33435 main.go:110] libmachine: (minikube) Calling .GetState
I0407 10:24:01.980909   33435 main.go:110] libmachine: (minikube) DBG | exe=/Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit uid=0
I0407 10:24:01.981155   33435 main.go:110] libmachine: (minikube) DBG | hyperkit pid from json: 33450
I0407 10:24:01.987054   33435 addons.go:104] Setting addon default-storageclass=true in "minikube"
W0407 10:24:01.987199   33435 addons.go:119] addon default-storageclass should already be in state true
I0407 10:24:01.987212   33435 host.go:65] Checking if "minikube" exists ...
I0407 10:24:01.987488   33435 main.go:110] libmachine: Found binary path at /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:24:01.987517   33435 main.go:110] libmachine: Launching plugin server for driver hyperkit
I0407 10:24:02.001729   33435 main.go:110] libmachine: Plugin server listening at address 127.0.0.1:58031
I0407 10:24:02.002238   33435 main.go:110] libmachine: () Calling .GetVersion
I0407 10:24:02.002681   33435 main.go:110] libmachine: Using API Version  1
I0407 10:24:02.002701   33435 main.go:110] libmachine: () Calling .SetConfigRaw
I0407 10:24:02.003009   33435 main.go:110] libmachine: () Calling .GetMachineName
I0407 10:24:02.003484   33435 main.go:110] libmachine: Found binary path at /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:24:02.003518   33435 main.go:110] libmachine: Launching plugin server for driver hyperkit
I0407 10:24:02.017820   33435 main.go:110] libmachine: Plugin server listening at address 127.0.0.1:58035
I0407 10:24:02.018400   33435 main.go:110] libmachine: () Calling .GetVersion
I0407 10:24:02.018859   33435 main.go:110] libmachine: Using API Version  1
I0407 10:24:02.018872   33435 main.go:110] libmachine: () Calling .SetConfigRaw
I0407 10:24:02.019183   33435 main.go:110] libmachine: () Calling .GetMachineName
I0407 10:24:02.019332   33435 main.go:110] libmachine: (minikube) Calling .GetState
I0407 10:24:02.019469   33435 main.go:110] libmachine: (minikube) DBG | exe=/Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit uid=0
I0407 10:24:02.019707   33435 main.go:110] libmachine: (minikube) DBG | hyperkit pid from json: 33450
I0407 10:24:02.020921   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:24:02.021056   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:24:02.021171   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:24:02.021282   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:24:02.021382   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:24:02.021476   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:24:02.048721   33435 addons.go:197] installing /etc/kubernetes/addons/storageclass.yaml
I0407 10:24:02.049887   33435 ssh_runner.go:174] Transferring 271 bytes to /etc/kubernetes/addons/storageclass.yaml
I0407 10:24:02.050417   33435 ssh_runner.go:193] storageclass.yaml: copied 271 bytes
I0407 10:24:02.060514   33435 ssh_runner.go:101] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.18.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0407 10:24:02.299742   33435 main.go:110] libmachine: Making call to close driver server
I0407 10:24:02.299756   33435 main.go:110] libmachine: (minikube) Calling .Close
I0407 10:24:02.300035   33435 main.go:110] libmachine: Successfully made call to close driver server
I0407 10:24:02.300037   33435 main.go:110] libmachine: (minikube) DBG | Closing plugin on server side
I0407 10:24:02.300044   33435 main.go:110] libmachine: Making call to close connection to plugin binary
I0407 10:24:02.300052   33435 main.go:110] libmachine: Making call to close driver server
I0407 10:24:02.300057   33435 main.go:110] libmachine: (minikube) Calling .Close
I0407 10:24:02.300244   33435 main.go:110] libmachine: (minikube) DBG | Closing plugin on server side
I0407 10:24:02.300254   33435 main.go:110] libmachine: Successfully made call to close driver server
I0407 10:24:02.300262   33435 main.go:110] libmachine: Making call to close connection to plugin binary
I0407 10:24:02.300276   33435 main.go:110] libmachine: Making call to close driver server
I0407 10:24:02.300285   33435 main.go:110] libmachine: (minikube) Calling .Close
I0407 10:24:02.300447   33435 main.go:110] libmachine: Successfully made call to close driver server
I0407 10:24:02.300475   33435 main.go:110] libmachine: Making call to close connection to plugin binary
I0407 10:24:02.300506   33435 addons.go:70] Writing out "minikube" config to set default-storageclass=true...
I0407 10:24:02.300539   33435 main.go:110] libmachine: (minikube) DBG | Closing plugin on server side
I0407 10:24:02.300992   33435 addons.go:45] Setting storage-provisioner=true in profile "minikube"
I0407 10:24:02.301786   33435 addons.go:104] Setting addon storage-provisioner=true in "minikube"
W0407 10:24:02.301896   33435 addons.go:119] addon storage-provisioner should already be in state true
I0407 10:24:02.301909   33435 host.go:65] Checking if "minikube" exists ...
I0407 10:24:02.302237   33435 main.go:110] libmachine: Found binary path at /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:24:02.302289   33435 main.go:110] libmachine: Launching plugin server for driver hyperkit
I0407 10:24:02.315590   33435 main.go:110] libmachine: Plugin server listening at address 127.0.0.1:58040
I0407 10:24:02.316320   33435 main.go:110] libmachine: () Calling .GetVersion
I0407 10:24:02.316805   33435 main.go:110] libmachine: Using API Version  1
I0407 10:24:02.316815   33435 main.go:110] libmachine: () Calling .SetConfigRaw
I0407 10:24:02.317311   33435 main.go:110] libmachine: () Calling .GetMachineName
I0407 10:24:02.317775   33435 main.go:110] libmachine: Found binary path at /Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit
I0407 10:24:02.317865   33435 main.go:110] libmachine: Launching plugin server for driver hyperkit
I0407 10:24:02.331435   33435 main.go:110] libmachine: Plugin server listening at address 127.0.0.1:58044
I0407 10:24:02.331919   33435 main.go:110] libmachine: () Calling .GetVersion
I0407 10:24:02.332348   33435 main.go:110] libmachine: Using API Version  1
I0407 10:24:02.332362   33435 main.go:110] libmachine: () Calling .SetConfigRaw
I0407 10:24:02.332624   33435 main.go:110] libmachine: () Calling .GetMachineName
I0407 10:24:02.332742   33435 main.go:110] libmachine: (minikube) Calling .GetState
I0407 10:24:02.332856   33435 main.go:110] libmachine: (minikube) DBG | exe=/Users/priyawadhwa/.minikube/bin/docker-machine-driver-hyperkit uid=0
I0407 10:24:02.333075   33435 main.go:110] libmachine: (minikube) DBG | hyperkit pid from json: 33450
I0407 10:24:02.334212   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:24:02.334330   33435 main.go:110] libmachine: (minikube) Calling .DriverName
I0407 10:24:02.334453   33435 main.go:110] libmachine: (minikube) Calling .GetSSHHostname
I0407 10:24:02.334551   33435 main.go:110] libmachine: (minikube) Calling .GetSSHPort
I0407 10:24:02.334656   33435 main.go:110] libmachine: (minikube) Calling .GetSSHKeyPath
I0407 10:24:02.334758   33435 main.go:110] libmachine: (minikube) Calling .GetSSHUsername
I0407 10:24:02.362678   33435 addons.go:197] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0407 10:24:02.363956   33435 ssh_runner.go:174] Transferring 1709 bytes to /etc/kubernetes/addons/storage-provisioner.yaml
I0407 10:24:02.364672   33435 ssh_runner.go:193] storage-provisioner.yaml: copied 1709 bytes
I0407 10:24:02.375986   33435 ssh_runner.go:101] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.18.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0407 10:24:02.497135   33435 main.go:110] libmachine: Making call to close driver server
I0407 10:24:02.497166   33435 main.go:110] libmachine: (minikube) Calling .Close
I0407 10:24:02.497409   33435 main.go:110] libmachine: (minikube) DBG | Closing plugin on server side
I0407 10:24:02.497410   33435 main.go:110] libmachine: Successfully made call to close driver server
I0407 10:24:02.497466   33435 main.go:110] libmachine: Making call to close connection to plugin binary
I0407 10:24:02.497496   33435 main.go:110] libmachine: Making call to close driver server
I0407 10:24:02.497503   33435 main.go:110] libmachine: (minikube) Calling .Close
I0407 10:24:02.497690   33435 main.go:110] libmachine: Successfully made call to close driver server
I0407 10:24:02.497700   33435 main.go:110] libmachine: Making call to close connection to plugin binary
I0407 10:24:02.497708   33435 addons.go:70] Writing out "minikube" config to set storage-provisioner=true...
I0407 10:24:02.497709   33435 main.go:110] libmachine: (minikube) DBG | Closing plugin on server side
I0407 10:24:02.498086   33435 addons.go:282] enableAddons completed in 555.325797ms
I0407 10:24:02.498143   33435 main.go:110] libmachine: Making call to close driver server
I0407 10:24:02.498149   33435 main.go:110] libmachine: (minikube) Calling .Close
I0407 10:24:02.498429   33435 main.go:110] libmachine: Successfully made call to close driver server
I0407 10:24:02.498456   33435 main.go:110] libmachine: (minikube) DBG | Closing plugin on server side
I0407 10:24:02.498460   33435 main.go:110] libmachine: Making call to close connection to plugin binary
I0407 10:24:02.498479   33435 main.go:110] libmachine: Making call to close driver server
I0407 10:24:02.498498   33435 main.go:110] libmachine: (minikube) Calling .Close
I0407 10:24:02.498700   33435 main.go:110] libmachine: Successfully made call to close driver server
I0407 10:24:02.498719   33435 main.go:110] libmachine: Making call to close connection to plugin binary
I0407 10:24:02.498723   33435 main.go:110] libmachine: (minikube) DBG | Closing plugin on server side
* Done! kubectl is now configured to use "minikube"
I0407 10:24:02.559223   33435 start.go:457] kubectl: 1.18.0, cluster: 1.18.0 (minor skew: 0)
